import { combineReducers, bindActionCreators } from "redux";
import { NEW_PETITION, UPDATE_PETITION } from "frontend/src/actions/petitions";

export default petitionsReducer = combineReducers({
  petitionUpdates: petitionsUpdatesReducer,
  petitionCollection: petitionCollectionReducer,
});

/**
 * Slice of state explaining if petitions are currently being collected from the server.
 * @param {} state
 * @param {*} action
 */
export function petitionsUpdatesReducer(state = {}, action) {
  switch (action.type) {
    case "FETCH_PETITIONS_SUCCEEDED":
      return state;
    default:
      return state;
  }
}

/**
 * Slice of state with a collection of petitions that could be generated by the server.
 */
export function petitionCollectionReducer(state = {}, action) {
  switch (action.type) {
    case NEW_PETITION: {
      // Add a new petition
    }
    case UPDATE_PETITION: {
      // UPdate a petition.
    }
  }
}
